#
# This is a GitHub Actions workflow for building, testing and deploying RedstoneBot.
#
# Author: Lucca Rodrigues
#

name: RedstoneBot CI/CD

on: [push]

jobs:

  # main job
  build-test-deploy:

    runs-on: ubuntu-latest

    steps:
      
      # check out code
      - uses: actions/checkout@v2

      # install Python 3.9
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
        
      # install PyPI libraries
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      # launch bot for testing
      - name: Start CI bot
        env:
          BOT_TOKEN: ${{ secrets.CI_TOKEN }}
          BOT_PREFIX: '!ci'         
          PLOUDOS_USERNAME: ${{ secrets.PLOUDOS_USERNAME }}
          PLOUDOS_PASSWORD: ${{ secrets.PLOUDOS_PASSWORD }}

        # run in the background
        run: |          
          cd ./code/
          touch db.csv
          echo '123123123,dummyaddress.ploudos.me,False' >> db.csv
          nohup python3 bot.py &
          cd ..

      # run integration testing with distest
      - name: Run tests 

        # get tester bot token and test server address from repo secrets        
        # store them in environment variables
        env:               
          TESTER_TOKEN: ${{ secrets.TESTER_TOKEN }}
          PLOUDOS_IP: ${{ secrets.PLOUDOS_IP }}

        # run testing script
        run: |
          python3 ./code/tester.py

      # Creating SSH private key
      - name: Create SSH identity file

        # Get BASE64-encoded private key stored in repo secret
        env:        
          DEPLOYMENTKEY: ${{ secrets.DEPLOYKEY }}

        # Decode with BASE64, change permissions with chmod        
        run: | 
          echo "$DEPLOYMENTKEY" | base64 --decode  >deployment.key
          chmod 400 deployment.key

      # Rsync over SSH - tranfer files with deployment.key
      - name: Sync files with AWS Lightsail             
        run:           
          rsync -zaPv -e "ssh -v -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i deployment.key" ./ ubuntu@34.200.98.64:~/RedstoneBot/    

      # SSH command
      - name: Restart bot      
        run:                     
          ssh -v -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i deployment.key ubuntu@34.200.98.64 bash /home/ubuntu/RedstoneBot/update.sh
     



